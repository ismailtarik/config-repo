#spring.application.name=order
#server.port = 8083
#spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/orderDB}
#spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
#spring.datasource.password={SPRING_DATASOURCE_PASSWORD:tarik2000$}
#
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.driverClassName=org.postgresql.Driver
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.show-sql=true
#
#
#spring.datasource.hikari.maximumPoolSize=2
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#remote.server.api=http://localhost:8083/api/



# Nom de l'application (doit correspondre au fichier client)
spring.application.name=order

# Port utilisé par le service
server.port=8083

# Configuration de la base de données
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/orderDB}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:tarik2000$}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA et Hibernate
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

# Configuration Hikari (gestion des connexions)
spring.datasource.hikari.maximumPoolSize=2
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# API distante
remote.server.api=http://localhost:8083/api/

# Intégration avec Eureka (Service Discovery)
spring.cloud.discovery.enabled=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true

# Activer Spring Cloud Config
spring.cloud.config.enabled=true

# Configurer l'application comme une application non web si nécessaire
spring.main.web-application-type=none

# Management et endpoints d'observation
management.endpoints.web.exposure.include=*

# Documentation avec Swagger/OpenAPI
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true

# Éviter une auto-configuration indésirable (optionnel, ne pas exclure si la DataSource est bien configurée)
# spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
